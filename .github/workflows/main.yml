name: Bastion host를 통한 CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      IMAGE_REPO: jaeikjeong/bimillog

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Restore application-prod.yml
        run: |
          mkdir -p backend/src/main/resources
          echo "${{ secrets.SPRING_PROD_YML }}" | base64 -d > backend/src/main/resources/application-prod.yml

      - name: Restore firebase-adminsdk json
        run: |
          mkdir -p backend/src/main/resources/firebase
          echo "${{ secrets.FIREBASE_ADMIN_JSON }}" | base64 -d > backend/src/main/resources/firebase/growfarm-6cd79-firebase-adminsdk-fbsvc-ad2bc92194.json

      - name: Restore .env
        run: |
          echo "${{ secrets.FRONTEND_ENV }}" | base64 -d > frontend/.env

      - name: Log in to Docker Hub
        run: echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

      - name: Build and push backend image
        run: |
          cd backend
          docker build -f backend.Dockerfile -t bimillog-backend .
          docker tag bimillog-backend:latest $IMAGE_REPO:backend
          docker push $IMAGE_REPO:backend

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.BASTION_HOST }}
          username: ${{ secrets.BASTION_USER }}
          key: ${{ secrets.BASTION_SSH_KEY }}
          source: "backend/docker-compose.yml"
          target: "/tmp/"

      - name: Deploy Backend and Redis via Bastion Host
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.BASTION_HOST }}
          username: ${{ secrets.BASTION_USER }}
          key: ${{ secrets.BASTION_SSH_KEY }}
          script: |
            # Copy docker-compose.yml to backend server via bastion
            scp -i ~/growfarm-backend-server-key.pem -o StrictHostKeyChecking=no /tmp/backend/docker-compose.yml ${{ secrets.SERVER_USER }}@${{ secrets.BACKEND_SERVER_IP }}:/home/ubuntu/

            # SSH to backend server and deploy
            ssh -i ~/growfarm-backend-server-key.pem -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.BACKEND_SERVER_IP }} << 'ENDSSH'
              # Create .env file with secrets
              cat > /home/ubuntu/.env << 'EOF'
              REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
              EOF

              # Login to Docker Hub
              echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

              # Deploy using docker-compose with environment variables
              cd /home/ubuntu
              export REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
              docker-compose down || true
              docker-compose pull
              docker-compose up -d
            ENDSSH

      - name: Build and push frontend image
        run: |
          cd frontend
          docker build -t bimillog-frontend .
          docker tag bimillog-frontend:latest $IMAGE_REPO:frontend
          docker push $IMAGE_REPO:frontend

      - name: Deploy Frontend via Bastion Host
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.BASTION_HOST }}
          username: ${{ secrets.BASTION_USER }}
          key: ${{ secrets.BASTION_SSH_KEY }}
          script: |
            ssh -i ~/growfarm-frontend-server-key.pem -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.FRONTEND_SERVER_IP }} << 'ENDSSH'
            echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            docker pull jaeikjeong/bimillog:frontend
            docker stop bimillog-frontend || true
            docker rm bimillog-frontend || true
            docker run -d --name bimillog-frontend -p 3000:3000 jaeikjeong/bimillog:frontend
            ENDSSH

