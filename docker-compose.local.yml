services:
  # Redis
  redis:
    image: redis:8.2.2-alpine3.22
    container_name: bimillog-redis-local
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data-local:/data
    networks:
      - bimillog-local
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Redis Exporter (Prometheus metrics for Redis)
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: bimillog-redis-exporter-local
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - bimillog-local
    depends_on:
      - redis

  # Backend (Spring Boot)
  backend:
    build:
      context: ./BimilLog_core
      dockerfile: Dockerfile
    container_name: bimillog-backend-local
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=local
      - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:3306/bimillogTest?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=${LOCAL_MYSQL_PASSWORD}
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=${REDIS_PASSWORD}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID}
      - KAKAO_CLIENT_SECRET=${KAKAO_CLIENT_SECRET}
      - KAKAO_ADMIN_KEY=${KAKAO_ADMIN_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - MESSAGE_SECRET=${MESSAGE_SECRET}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - bimillog-local
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Frontend (Next.js) - Run locally with "npm run dev"
  # frontend:
  #   build:
  #     context: ./BimilLog_front
  #     dockerfile: Dockerfile
  #     args:
  #       NEXT_PUBLIC_API_URL: http://localhost:8080
  #       NEXT_PUBLIC_KAKAO_REDIRECT_URI: http://localhost:3000/auth/callback
  #       NEXT_PUBLIC_KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
  #       NEXT_PUBLIC_KAKAO_JAVA_SCRIPT_KEY: ${NEXT_PUBLIC_KAKAO_JAVA_SCRIPT_KEY}
  #   container_name: bimillog-frontend-local
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   networks:
  #     - bimillog-local
  #   environment:
  #     - NODE_ENV=development

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: bimillog-prometheus-local
    ports:
      - "9090:9090"
    volumes:
      - ./BimilLog_core/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data-local:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    depends_on:
      - backend
    networks:
      - bimillog-local

  # Loki (Log Aggregation)
  loki:
    image: grafana/loki:latest
    container_name: bimillog-loki-local
    ports:
      - "3100:3100"
    volumes:
      - loki-data-local:/loki
    networks:
      - bimillog-local
    command: -config.file=/etc/loki/local-config.yaml

  # Promtail (Log Collection)
  promtail:
    image: grafana/promtail:latest
    container_name: bimillog-promtail-local
    volumes:
      - ./BimilLog_core/promtail/promtail-config.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - bimillog-local
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki

  # Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: bimillog-grafana-local
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3001
    volumes:
      - grafana-data-local:/var/lib/grafana
      - ./BimilLog_core/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    depends_on:
      - prometheus
      - loki
      - redis-exporter
    networks:
      - bimillog-local

  # JMeter (Load Testing)
  jmeter:
    image: justb4/jmeter:latest
    container_name: bimillog-jmeter-local
    volumes:
      - ./performance/jmeter:/tests
      - ./performance/results:/results
    networks:
      - bimillog-local
    depends_on:
      - backend
    command: >
      -n -t /tests/cache-load-test.jmx
      -l /results/results.jtl
      -j /results/jmeter.log
      -e -o /results/html-report

networks:
  bimillog-local:
    driver: bridge

volumes:
  redis-data-local:
  prometheus-data-local:
  grafana-data-local:
  loki-data-local:
